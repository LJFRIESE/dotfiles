# ---------------------
# General ZSH config --
# ---------------------

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/git/.oh-my-zsh"

# Hide the ugly compdump files away
export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST
export ZSH_THEME="powerlevel10k/powerlevel10k"
# source ~/git/.oh-my-zsh/custom/themes/powerlevel10k/powerlevel10k.zsh-theme

# Required so chezmoi does not drift out of date
DISABLE_AUTO_UPDATE="true"
# Which plugins would you like to load?
plugins=(
    zsh-autosuggestions
    fzf-tab
)
source $ZSH/oh-my-zsh.sh

# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
# NOTE: don't use escape sequences (like '%F{red}%d%f') here, fzf-tab will ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'batcat --style=full --color=always --highlight-line ${1}'
# custom fzf flags
# NOTE: fzf-tab does not follow FZF_DEFAULT_OPTS by default
zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=ctrl-y:accept
# switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'

# Tmux popup
zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup
zstyle ':fzf-tab:*' popup-min-size 50 8

# User configuration
export PATH="/snap/bin:$PATH"
export EDITOR='nvim'

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

export TERM="xterm-256color"


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


# -----------------------------
# Workspace config variables --
# -----------------------------

if [[ $NAME = "NH505053" ]]; then
    export WINHOME="$HOME/../../mnt/c/Users/LUCASFRI/"
    # Mounting m has not been done in a persistent way yet. That should be doable with
    # M: /mnt/m drvfs defaults 0 0
    # in etc/fstab
    # To mount it ad hoc, use: sudo mount -t drvfs M: /mnt/m
    export MDRIVE="../../mnt/m"
elif [[ $NAME = "LittleLaptop" ]]; then
    export WINHOME="$HOME/../../mnt/c/Users/LUCAS/"
fi


# -----------------------
# zsh-autosuggestions ---
# -----------------------
# source ~/git/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

bindkey '^y' autosuggest-execute
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)

# ----------
# Chezmoi --
# ----------

alias cm="chezmoi"
alias cme="chezmoi edit --apply"


# ----------
# FZF/FD  --
# ----------

export FZF_DEFAULT_COMMAND="fdfind ${FZF_FD_OPTS}"
export FZF_CTRL_T_COMMAND="fdfind ${FZF_FD_OPTS}"
export FZF_ALT_C_COMMAND="fdfind --type d ${FZF_FD_OPTS}"

alias fd='fdfind'
# Find directories with files
alias fdf="fd --type d --hidden --follow --exclude '.git' | fzf --height 40% --reverse --border 'rounded' --border-label ' TAB (Multi) | CTRL-N/P (Nav) ' --preview 'tree -C {}'"

# https://thevaluable.dev/fzf-shell-integration/
_fzf_compgen_path() {
    rg --files --glob "!.git" . "$1"
}

_fzf_compgen_dir() {
    fd --type d --hidden --follow --exclude ".git" . "$1"
}

# Command-specific customization. If command == tree, do 'a', else ('*') do b
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    tree)         fd --type d --hidden --follow --exclude ".git" | fzf --preview 'tree -C {}' "$@";;
    *)            fzf "$@" ;;
  esac
}



# ----------
# Ripgrep --
# ----------

# Find files or directories with text
# Switch between Ripgrep launcher mode (CTRL-R) and fzf filtering mode (CTRL-F)
rgf() (
    rm -f /tmp/rg-fzf-{r,f}
    RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
    INITIAL_QUERY="${*:-}"
    fzf --ansi --disabled --query "$INITIAL_QUERY" \
        --bind "start:reload($RG_PREFIX {q})+unbind(ctrl-r)" \
        --bind "change:reload:sleep 0.1; $RG_PREFIX {q} || true" \
        --bind "ctrl-f:unbind(change,ctrl-f)+change-prompt(2. fzf> )+enable-search+rebind(ctrl-r)+transform-query(echo {q} > /tmp/rg-fzf-r; cat /tmp/rg-fzf-f)" \
        --bind "ctrl-r:unbind(ctrl-r)+change-prompt(1. ripgrep> )+disable-search+reload($RG_PREFIX {q} || true)+rebind(change,ctrl-f)+transform-query(echo {q} > /tmp/rg-fzf-f; cat /tmp/rg-fzf-r)" \
        --color "hl:-1:underline,hl+:-1:underline:reverse" \
        --prompt '1. ripgrep> ' \
        --delimiter : \
        --header '╱ CTRL-R (ripgrep mode) ╱ CTRL-F (fzf mode) ╱' \
        --preview 'batcat --style=full --color=always --highlight-line {2} {1}' \
        --bind 'enter:become(vim {1} +{2})'
)
